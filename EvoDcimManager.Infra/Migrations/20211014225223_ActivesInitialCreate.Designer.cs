// <auto-generated />
using System;
using EvoDcimManager.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EvoDcimManager.Infra.Migrations
{
    [DbContext(typeof(ActiveContext))]
    [Migration("20211014225223_ActivesInitialCreate")]
    partial class ActivesInitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EvoDcimManager.Domain.ActiveContext.Entities.BaseEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Manufactor")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Model")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("BaseEquipment");
                });

            modelBuilder.Entity("EvoDcimManager.Domain.ActiveContext.Entities.Rack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Localization")
                        .HasColumnType("varchar(12)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rack");
                });

            modelBuilder.Entity("EvoDcimManager.Domain.ActiveContext.Entities.RackEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BaseEquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RackId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BaseEquipmentId");

                    b.HasIndex("RackId");

                    b.ToTable("RackEquipment");
                });

            modelBuilder.Entity("EvoDcimManager.Domain.ActiveContext.Entities.RackPosition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinalPosition")
                        .HasColumnType("int");

                    b.Property<int>("InitialPosition")
                        .HasColumnType("int");

                    b.Property<Guid?>("RackId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("RackId");

                    b.ToTable("RackPosition");
                });

            modelBuilder.Entity("EvoDcimManager.Domain.ActiveContext.Entities.Server", b =>
                {
                    b.HasBaseType("EvoDcimManager.Domain.ActiveContext.Entities.RackEquipment");

                    b.Property<string>("Cpu")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Memory")
                        .HasColumnType("int");

                    b.Property<int>("Storage")
                        .HasColumnType("int");

                    b.ToTable("Server");
                });

            modelBuilder.Entity("EvoDcimManager.Domain.ActiveContext.Entities.RackEquipment", b =>
                {
                    b.HasOne("EvoDcimManager.Domain.ActiveContext.Entities.BaseEquipment", "BaseEquipment")
                        .WithMany()
                        .HasForeignKey("BaseEquipmentId");

                    b.HasOne("EvoDcimManager.Domain.ActiveContext.Entities.Rack", "Rack")
                        .WithMany()
                        .HasForeignKey("RackId");

                    b.Navigation("BaseEquipment");

                    b.Navigation("Rack");
                });

            modelBuilder.Entity("EvoDcimManager.Domain.ActiveContext.Entities.RackPosition", b =>
                {
                    b.HasOne("EvoDcimManager.Domain.ActiveContext.Entities.RackEquipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId");

                    b.HasOne("EvoDcimManager.Domain.ActiveContext.Entities.Rack", null)
                        .WithMany("Slots")
                        .HasForeignKey("RackId");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("EvoDcimManager.Domain.ActiveContext.Entities.Server", b =>
                {
                    b.HasOne("EvoDcimManager.Domain.ActiveContext.Entities.RackEquipment", null)
                        .WithOne()
                        .HasForeignKey("EvoDcimManager.Domain.ActiveContext.Entities.Server", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EvoDcimManager.Domain.ActiveContext.Entities.Rack", b =>
                {
                    b.Navigation("Slots");
                });
#pragma warning restore 612, 618
        }
    }
}
