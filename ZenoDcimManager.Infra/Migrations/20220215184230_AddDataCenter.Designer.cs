// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZenoDcimManager.Infra.Contexts;

#nullable disable

namespace ZenoDcimManager.Infra.Migrations
{
    [DbContext(typeof(ActiveContext))]
    [Migration("20220215184230_AddDataCenter")]
    partial class AddDataCenter
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ZenoDcimManager.Domain.ActiveContext.Entities.BaseEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Manufactor")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Model")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("BaseEquipment", (string)null);
                });

            modelBuilder.Entity("ZenoDcimManager.Domain.ActiveContext.Entities.Building", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Campus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("ZenoDcimManager.Domain.ActiveContext.Entities.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<string>("Component")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RackPduId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RackId");

                    b.HasIndex("RackPduId");

                    b.HasIndex("RoomId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("ZenoDcimManager.Domain.ActiveContext.Entities.Floor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuildingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Floors");
                });

            modelBuilder.Entity("ZenoDcimManager.Domain.ActiveContext.Entities.Rack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Localization")
                        .HasColumnType("varchar(12)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rack", (string)null);
                });

            modelBuilder.Entity("ZenoDcimManager.Domain.ActiveContext.Entities.RackEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BaseEquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinalPosition")
                        .HasColumnType("int");

                    b.Property<int>("InitialPosition")
                        .HasColumnType("int");

                    b.Property<int>("RackEquipmentType")
                        .HasColumnType("int");

                    b.Property<Guid?>("RackId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BaseEquipmentId");

                    b.HasIndex("RackId");

                    b.ToTable("RackEquipment", (string)null);
                });

            modelBuilder.Entity("ZenoDcimManager.Domain.ActiveContext.Entities.RackPdu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RackPdu");
                });

            modelBuilder.Entity("ZenoDcimManager.Domain.ActiveContext.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FloorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FloorId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ZenoDcimManager.Domain.ActiveContext.Entities.Equipment", b =>
                {
                    b.HasOne("ZenoDcimManager.Domain.ActiveContext.Entities.Rack", "Rack")
                        .WithMany()
                        .HasForeignKey("RackId");

                    b.HasOne("ZenoDcimManager.Domain.ActiveContext.Entities.RackPdu", "RackPdu")
                        .WithMany()
                        .HasForeignKey("RackPduId");

                    b.HasOne("ZenoDcimManager.Domain.ActiveContext.Entities.Room", null)
                        .WithMany("Equipments")
                        .HasForeignKey("RoomId");

                    b.Navigation("Rack");

                    b.Navigation("RackPdu");
                });

            modelBuilder.Entity("ZenoDcimManager.Domain.ActiveContext.Entities.Floor", b =>
                {
                    b.HasOne("ZenoDcimManager.Domain.ActiveContext.Entities.Building", null)
                        .WithMany("Floors")
                        .HasForeignKey("BuildingId");
                });

            modelBuilder.Entity("ZenoDcimManager.Domain.ActiveContext.Entities.RackEquipment", b =>
                {
                    b.HasOne("ZenoDcimManager.Domain.ActiveContext.Entities.BaseEquipment", "BaseEquipment")
                        .WithMany()
                        .HasForeignKey("BaseEquipmentId");

                    b.HasOne("ZenoDcimManager.Domain.ActiveContext.Entities.Rack", null)
                        .WithMany("RackEquipments")
                        .HasForeignKey("RackId");

                    b.Navigation("BaseEquipment");
                });

            modelBuilder.Entity("ZenoDcimManager.Domain.ActiveContext.Entities.Room", b =>
                {
                    b.HasOne("ZenoDcimManager.Domain.ActiveContext.Entities.Floor", null)
                        .WithMany("Rooms")
                        .HasForeignKey("FloorId");
                });

            modelBuilder.Entity("ZenoDcimManager.Domain.ActiveContext.Entities.Building", b =>
                {
                    b.Navigation("Floors");
                });

            modelBuilder.Entity("ZenoDcimManager.Domain.ActiveContext.Entities.Floor", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("ZenoDcimManager.Domain.ActiveContext.Entities.Rack", b =>
                {
                    b.Navigation("RackEquipments");
                });

            modelBuilder.Entity("ZenoDcimManager.Domain.ActiveContext.Entities.Room", b =>
                {
                    b.Navigation("Equipments");
                });
#pragma warning restore 612, 618
        }
    }
}
